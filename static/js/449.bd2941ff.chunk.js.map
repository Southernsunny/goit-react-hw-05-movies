{"version":3,"file":"static/js/449.bd2941ff.chunk.js","mappings":"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","sources":["components/MoviesAbout/MoviesAbout.styled.jsx","components/MoviesAbout/MoviesAbout.jsx","pages/MovieDetails.jsx","service/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Review = styled.ul`\n  padding: 10px;\n  ${'' /* background-color: rgba(0, 0, 0, 0.5); */}\n  background-color: rgba(\t179,\t202,\t224, 0.8);\n  border-radius: 20px;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  gap:30px;\n`;\n\nexport const MainTitle = styled.h2`\n  font-size: 26px;\n  text-align: start;\n  color: #e8b67f;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 22px;\n  text-align: start;\n  color: lightblue;\n  margin-bottom: 10px;\n    margin-top: 30px;\n\n`;\n\nexport const Description = styled.div`\n  padding: 10px 0;\n  font-size: 18px;\n  letter-spacing: 0.05em;\n  color: white;\n  width:850px;\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 10px;\n`;\n\nexport const About = styled.ul`\n  display: flex;\n  gap:50px;\n  font-size: 22px;\n  margin:10px 0 30px;\n  \n`;\n\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { About, Container, Description, Image,  MainTitle, Title } from './MoviesAbout.styled';\n\nconst MovieAbout = ({ movieDetails }) => {\n  const { poster_path, title, genres, overview, vote_average, release_date } = movieDetails;\n\n  return (\n    <>\n      <Container>\n        <div>\n          {poster_path ? (\n            <Image\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n              loading=\"lazy\"\n            />\n          ) : (\n            <Image\n              src=\"https://i.pinimg.com/564x/a1/85/30/a18530156b801a7b5360c3dc3a05e16e.jpg\"\n              alt=\"NoPhoto\"\n              loading=\"lazy\"\n            />\n          )}\n        </div>\n        <Description>\n          {title && (\n            <MainTitle>\n              {title} {release_date.substr(0, 4)}\n            </MainTitle>\n          )}\n\n          <p>User Score: {vote_average && Math.floor(vote_average * 10)}%</p>\n          <Title>Overview</Title>\n          <p>{overview}</p>\n          <Title>Genres</Title>\n          {genres && <p>{genres.map(({ name }) => name).join(', ')}</p>}\n        </Description>\n      </Container>\n      <Title>\n        Additional information about <span style={{ color: '#e8b67f' }}>{title}</span>\n      </Title>\n      <About>\n        <li>\n          <StyleLink to=\"cast\">Cast</StyleLink>\n        </li>\n        <li>\n          <StyleLink to=\"reviews\">Reviews</StyleLink>\n        </li>\n      </About>\n    </>\n  );\n};\n\nconst StyleLink = styled(Link)`\n  color: white;\n  font-size: 22px;\n  padding: 5px 10px;\n  border: 1px solid transparent;\n  border-radius: 20px;\n  background-color: rgba(232, 182, 127, 0.6);\n  &:hover {\n    border: 1px dotted white;\n  }\n`;\n\nMovieAbout.propTypes = {\n  movieDetails: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieAbout;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'service/movie-service';\nimport Loader from 'components/Loader';\nimport MovieAbout from 'components/MoviesAbout/MoviesAbout';\nimport styled from '@emotion/styled';\n\nconst MoviesDetails = () => {\n  const [moviesDetails, setMoviesDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMoviesDetails);\n  }, [movieId]);\n\n  return (\n    <>\n      <BtnBox>\n        <LinkBtn to={backLinkLocation.current}>‚Üê Back</LinkBtn>\n      </BtnBox>\n      <MovieAbout movieDetails={moviesDetails} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nconst BtnBox = styled.div`\n  display: flex;\n  width: 1250px;\n  background: transparent;\n`;\n\nconst LinkBtn = styled(Link)`\n  margin-bottom: 20px;\n  color: white;\n  font-size: 22px;\n  padding: 5px 10px;\n  border: 1px solid transparent;\n  background-color: rgba(179, 202, 224, 0.5);\n  border-radius: 20px;\n  &.active {\n    color: lightskyblue;\n  }\n  &:hover {\n    border: 1px solid lightskyblue;\n  }\n`;\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst API_KEY = '6ac0b0dbe7e3d1c37f8b66ba372308c6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}`);\n  return data;\n};\n\nexport const getMovieCredits = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/reviews`);\n  return data;\n};\n"],"names":["Container","styled","MainTitle","Title","Description","Image","About","StyleLink","Link","movieDetails","poster_path","title","genres","overview","vote_average","release_date","src","alt","loading","substr","Math","floor","map","name","join","style","color","to","BtnBox","LinkBtn","useState","moviesDetails","setMoviesDetails","movieId","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","getMovieDetails","then","current","Suspense","fallback","Loader","axios","api_key","language","getTrendingMovies","data","results","searchMovies","query","page","moveId","getMovieCredits","getMovieReviews"],"sourceRoot":""}