{"version":3,"file":"static/js/93.47430383.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,EAAAA,IAAH,wGAORC,EAAYD,EAAAA,EAAAA,IAAH,yHAQTE,EAAaF,EAAAA,EAAAA,IAAH,0OAYVG,EAAOH,EAAAA,EAAAA,EAAH,sFAMJI,EAAYJ,EAAAA,EAAAA,EAAH,mE,SCStB,EAvCa,WACX,OAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC/BN,EAAcM,EACf,GACF,GAAE,CAACL,KAGF,SAACT,EAAD,UACGO,EAAWQ,OAAS,EACnBR,EAAWS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,KAAhC,OACb,UAAClB,EAAD,WACGgB,GACC,SAACf,EAAD,CACEkB,IAAG,yCAAoCH,GACvCI,IAAKF,EACLG,QAAQ,UAGV,SAACpB,EAAD,CACEkB,IAAI,0EACJC,IAAI,UACJC,QAAQ,UAGZ,SAACnB,EAAD,UAAOgB,KACP,UAACf,EAAD,yBAAuBc,EAAUK,OAAO,EAAG,QAf7BP,EADH,KAoBf,SAACb,EAAD,mDAIP,C,+LCtCDqB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,sGACRH,EAAAA,EAAAA,IAAU,uBADF,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHR,EAAAA,EAAAA,IAAA,8BAAiCO,EAAjC,iBAA+CC,IAD5C,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZK,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,IADd,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfjB,EAAe,mCAAG,WAAMuB,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfO,EAAe,mCAAG,WAAMD,GAAN,yFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 50px;\n`;\n\nexport const ActorInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 200px;\n  gap: 10px;\n`;\n\nexport const GalleryImg = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  border-radius: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 26px;\n  text-align: center;\n  color: #f3b757;\n`;\n\nexport const Character = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'service/movie-service';\nimport { ActorInfo, CastInfo, Character, GalleryImg, Name } from './Cast.styled';\n\nconst Cast = () => {\n  const [moviesCast, setMoviesCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId).then(({ cast }) => {\n      setMoviesCast(cast);\n    });\n  }, [movieId]);\n\n  return (\n    <CastInfo>\n      {moviesCast.length > 0 ? (\n        moviesCast.map(({ id, profile_path, character, name }) => (\n          <ActorInfo key={id}>\n            {profile_path ? (\n              <GalleryImg\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n                loading=\"lazy\"\n              />\n            ) : (\n              <GalleryImg\n                src=\"https://i.pinimg.com/564x/c1/8f/78/c18f78e832db00967b7301abf0f2abd8.jpg\"\n                alt=\"NoPhoto\"\n                loading=\"lazy\"\n              />\n            )}\n            <Name>{name}</Name>\n            <Character>Character: {character.substr(0, 9)}</Character>\n          </ActorInfo>\n        ))\n      ) : (\n        <Name>Sorry, there is no information here</Name>\n      )}\n    </CastInfo>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '6ac0b0dbe7e3d1c37f8b66ba372308c6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}`);\n  return data;\n};\n\nexport const getMovieCredits = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/reviews`);\n  return data;\n};\n"],"names":["CastInfo","styled","ActorInfo","GalleryImg","Name","Character","useState","moviesCast","setMoviesCast","movieId","useParams","useEffect","getMovieCredits","then","cast","length","map","id","profile_path","character","name","src","alt","loading","substr","axios","api_key","language","getTrendingMovies","data","results","searchMovies","query","page","getMovieDetails","moveId","getMovieReviews"],"sourceRoot":""}