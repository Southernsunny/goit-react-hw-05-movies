{"version":3,"file":"static/js/193.c3d6752a.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.jsx","pages/Home.jsx","components/hooks/useGetTrendingMovies.js","service/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 20px;\n  margin:20px 0 0;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  color: white;\n`;\n","import styled from '@emotion/styled';\n\nexport const GalleryItem = styled.li`\n  border-radius: 10px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const GalleryImg = styled.img`\n  width: 100%;\n  height: 500px;\n  object-fit: cover;\n  border-radius: 10px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  margin: 15px 0 5px;\n  font-size: 24px;\n  text-align: center;\n  color:white;\n`;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { GalleryItem, GalleryImg, Title } from './MovieGalleryItem.styled';\n\nconst MovieGalleryItem = ({ id, title, poster_path, location }) => {\n  return (\n    <GalleryItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {poster_path ? (\n          <GalleryImg\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={title}\n            loading=\"lazy\"\n          />\n        ) : (\n          <GalleryImg\n            src=\"https://i.pinimg.com/564x/fa/30/62/fa3062404e71e0b5d4085bd411c60816.jpg\"\n            alt=\"NoPhoto\"\n            loading=\"lazy\"\n          />\n        )}\n        <Title>{title}</Title>\n      </Link>\n    </GalleryItem>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  location: PropTypes.object.isRequired,\n};\n\n\nexport default MovieGalleryItem;\n","import React from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieGalleryItem from 'components/MovieGalleryItem';\nimport { Gallery} from './MovieGallery.styled';\n\nconst MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Gallery>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <MovieGalleryItem\n              key={id}\n              id={id}\n              title={title}\n              poster_path={poster_path}\n              location={location}\n            />\n          );\n        })}\n      </Gallery>\n      <Outlet />\n    </>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieGallery;\n","import { useGetTrendingMovies } from 'components/hooks/useGetTrendingMovies';\nimport MovieGallery from 'components/MovieGallery';\nimport Loader from 'components/Loader';\nimport { Title } from 'components/MovieGallery/MovieGallery.styled';\n\nconst Home = () => {\n  const { movies, isError, isLoading } = useGetTrendingMovies();\n  if (isLoading) return <Loader />;\n  if (isError) return <div>Error</div>;\n\n  return (\n    <main>\n      <Title>Trending Today :</Title>\n      <MovieGallery movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'service/movie-service';\n\nexport const useGetTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isError, setIsError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getTrendingMovies();\n        setMovies(response);\n      } catch (error) {\n        setIsError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return {\n    movies,\n    isError,\n    isLoading,\n  };\n};\n","import axios from 'axios';\n\nconst API_KEY = '6ac0b0dbe7e3d1c37f8b66ba372308c6';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=${page}`);\n  return data;\n};\n\nexport const getMovieDetails = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}`);\n  return data;\n};\n\nexport const getMovieCredits = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async moveId => {\n  const { data } = await axios.get(`/movie/${moveId}/reviews`);\n  return data;\n};\n"],"names":["Gallery","styled","Title","GalleryItem","GalleryImg","id","title","poster_path","location","to","state","from","src","alt","loading","movies","useLocation","map","useState","setMovies","isError","setIsError","isLoading","setIsLoading","useEffect","getMovies","getTrendingMovies","response","useGetTrendingMovies","Loader","MovieGallery","axios","api_key","language","data","results","searchMovies","query","page","getMovieDetails","moveId","getMovieCredits","getMovieReviews"],"sourceRoot":""}